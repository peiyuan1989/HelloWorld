			//Step 1: create a worldMLPackage 
			WordprocessingMLPackage wordMLPackage = WordprocessingMLPackage.createPackage();
			NumberingDefinitionsPart ndp = new NumberingDefinitionsPart();
			wordMLPackage.getMainDocumentPart().addTargetPart(ndp);
			String numberXMLFormatToString = convertNumberXMLFormatToString();

			//Insert Bulletin Format 
			if(numberXMLFormatToString != null)
			{
				ndp.setJaxbElement((Numbering) XmlUtils.unmarshalString(numberXMLFormatToString));
			}

			wordMLPackage.getMainDocumentPart().getContent().add(insertParagraphText("hello world","black"));
			wordMLPackage.getMainDocumentPart().getContent().add(insertBulletinText("hello",0,1));
			wordMLPackage.getMainDocumentPart().getContent().add(insertBulletinText("Nice to meet you",1,1));
			wordMLPackage.getMainDocumentPart().getContent().add(insertPageBreak());
			wordMLPackage.getMainDocumentPart().getContent().add(insertBulletinText("Nice to meet",0,1));

			// write out our word doc to disk
			//File exportFile = new File("C:\\testDOC\\welcome.docx");
			//wordMLPackage.save(exportFile);	

			String baseFileName = "wordsTest";

			ByteArrayOutputStream baos = new ByteArrayOutputStream(); 
			Docx4J.save(wordMLPackage, baos);

			ByteArrayResource resource = new ByteArrayResource(baos.toByteArray());
			

			return ResponseEntity.ok()
					.header(HttpHeaders.CONTENT_DISPOSITION,
							"attachment;filename=" + "hello.docx")
					.contentType(MediaType.TEXT_PLAIN).contentLength(baos.toByteArray().length)
					.body(resource);